# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw -B package

  # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  # Step 4: Install Trivy for vulnerability scanning
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.33.0/trivy_0.33.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.33.0_Linux-64bit.deb

      # Step 5: Scan Docker image with Trivy
      - name: Scan Docker image for vulnerabilities
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL your-app:latest

      # Optional Step 6: Upload scan report (if needed)
      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt
